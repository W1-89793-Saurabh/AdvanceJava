package com.sunbeam.dao;

import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.jdbc.core.JdbcTemplate;
import org.springframework.jdbc.core.RowMapper;
import org.springframework.stereotype.Repository;

import com.sunbeam.entity.Book;

@Repository
public class BookDaoImpl implements BookDao {

	@Autowired
	private JdbcTemplate jdbcTemplate;
	
	@Autowired
	private RowMapper<Book> bookRowMapper;
	
	@Override
	public int save(Book b) {
		String sql = "insert into books(id, name, author, subject, price) values(?, ?, ?, ?, ?)";
		int count = jdbcTemplate.update(sql, b.getId(), b.getName(), b.getAuthor(), b.getSubject(), b.getPrice());
		return count;
	}

	@Override
	public int update(Book b) {
		String sql = "UPDATE books SET name=?, author=?, subject=?, price=? WHERE id=?";
		int count = jdbcTemplate.update(sql, b.getName(), b.getAuthor(), b.getSubject(), b.getPrice(), b.getId());
		return count;
	}

	@Override
	public int deleteById(int id) {
		String sql = "DELETE FROM books WHERE id=?";
		int count = jdbcTemplate.update(sql, id);
		return count;
	}

	@Override
	public List<Book> findAll() {
		String sql = "SELECT * FROM books";
		
		List<Book> list = jdbcTemplate.query(sql, bookRowMapper);
		return list;
	}

	@Override
	public List<Book> findBySubject(String subject) {
		String sql = "SELECT * FROM books WHERE subject = ?";
		List<Book> list = jdbcTemplate.query(sql, bookRowMapper, subject);
		return list;
	}

	@Override
	public Book findById(int bookId) {
		String sql = "select * from books where id = ?";
		List<Book> list = jdbcTemplate.query(sql, bookRowMapper, bookId);
		return list.isEmpty() ? null : list.get(0);
	}

	@Override
	public Book findByName(String bookName) {
		String sql = "select * from books where name = ?";
		List<Book> list = jdbcTemplate.query(sql, bookRowMapper, bookName);
		return list.isEmpty() ? null : list.get(0);
	}

	@Override
	public List<Book> findByAuthor(String bookAuthor) {
		String sql = "select * from books where author  = ?";
		List<Book> list = jdbcTemplate.query(sql, bookRowMapper, bookAuthor);
		return list;
	}

	@Override
	public List<Book> findByPrice(double price) {
		// TODO Auto-generated method stub
		return null;
	}

}
